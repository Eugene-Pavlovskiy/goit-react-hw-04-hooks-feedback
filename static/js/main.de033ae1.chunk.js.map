{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Feedback","onClick","className","id","Statistics","good_value","neutral_value","bad_value","total","positivePercentage","isNaN","Section","title","children","Notification","props","App","useState","setGood","setNeutral","setBad","countTotalFeedback","FeedbackOptions","evt","target","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKACAA,EAAOC,QAAU,CAAC,aAAe,sCAAsC,YAAc,uC,iBCArFD,EAAOC,QAAU,CAAC,iBAAmB,uC,gBCArCD,EAAOC,QAAU,CAAC,QAAU,2B,qGCwCbC,MAtCf,YAAgC,IAAZC,EAAW,EAAXA,QAClB,OACE,mCACE,qBAAKC,UAAU,eAAf,SACE,qBAAIA,UAAU,eAAd,UACE,6BACE,wBACEA,UAAU,mBACVC,GAAG,aACHF,QAASA,EAHX,oBAQF,6BACE,wBACEC,UAAU,sBACVC,GAAG,gBACHF,QAASA,EAHX,uBAQF,6BACE,wBACEC,UAAU,kBACVC,GAAG,YACHF,QAASA,EAHX,2B,MCFGG,MAtBf,YAMI,IALFC,EAKC,EALDA,WACAC,EAIC,EAJDA,cACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAKP,UAAU,mBAAf,SACE,qBAAIA,UAAU,oBAAd,UACE,6CAAcG,KACd,gDAAiBC,KACjB,4CAAaC,KACb,8CAAeC,MACbE,MAAMD,IACN,yDAA0BA,EAA1B,a,MCNKE,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASD,MAAOA,EAAOV,UAAU,UAAjC,UACE,6BAAKU,IACJC,MCDQC,MAJf,SAAsBC,GACpB,OAAO,mDCGM,SAASC,IACtB,MAA8BC,mBAAS,GAAvC,mBAAOZ,EAAP,KAAmBa,EAAnB,KACA,EAAoCD,mBAAS,GAA7C,mBAAOX,EAAP,KAAsBa,EAAtB,KACA,EAA4BF,mBAAS,GAArC,mBAAOV,EAAP,KAAkBa,EAAlB,KAuBA,SAASC,IACP,OAAOhB,EAAaC,EAAgBC,EAMtC,OACE,qCACE,cAAC,EAAD,CACEK,MAAM,wBACNC,SAAU,cAACS,EAAD,CAAiBrB,QAhCjC,SAAqBsB,GAGnB,OAFYA,EAAIC,OAAOrB,IAGrB,IAAK,aACHe,EAAQb,EAAa,GACrB,MAEF,IAAK,gBACHc,EAAWb,EAAgB,GAC3B,MAEF,IAAK,YACHc,EAAOb,EAAY,SAqBnBF,GAAeC,GAAkBC,EAGjC,cAAC,EAAD,CACEK,MAAM,aACNC,SACE,cAAC,EAAD,CACER,WAAYA,EACZC,cAAeA,EACfC,UAAWA,EACXC,MAAOa,IACPZ,mBApBHgB,KAAKC,MAAOrB,EAAagB,IAAwB,SAUpD,cAAC,EAAD,CAAST,MAAM,aAAaC,SAAU,cAAC,EAAD,SCzC9Cc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFc,SAASC,eAAe,W","file":"static/js/main.de033ae1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__list\":\"FeedbackOptions_button__list__tyk9v\",\"button__btn\":\"FeedbackOptions_button__btn__sAzJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics__list\":\"Statistics_statistics__list__soD53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","import React from \"react\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nfunction Feedback({ onClick }) {\n  return (\n    <>\n      <div className=\"button__area\">\n        <ul className=\"button__list\">\n          <li>\n            <button\n              className=\"button__btn good\"\n              id=\"good_value\"\n              onClick={onClick}\n            >\n              Good\n            </button>\n          </li>\n          <li>\n            <button\n              className=\"button__btn neutral\"\n              id=\"neutral_value\"\n              onClick={onClick}\n            >\n              Neutral\n            </button>\n          </li>\n          <li>\n            <button\n              className=\"button__btn bad\"\n              id=\"bad_value\"\n              onClick={onClick}\n            >\n              Bad\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default Feedback;","import React, { Component } from \"react\";\nimport styles from \"./Statistics.module.css\";\n\nfunction Statistics({\n  good_value,\n  neutral_value,\n  bad_value,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className=\"statistics__area\">\n      <ul className=\"statistics__list \">\n        <li>{`Good: ${good_value}`}</li>\n        <li>{`Neutral: ${neutral_value}`}</li>\n        <li>{`Bad: ${bad_value}`}</li>\n        <li>{`Total: ${total}`}</li>\n        {!isNaN(positivePercentage) && (\n          <li>{`Positive feedback:${positivePercentage}%`}</li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Statistics;","import React, { Component } from \"react\";\nimport styles from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section title={title} className=\"section\">\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;","import React, { Component } from \"react\";\n\nfunction Notification(props) {\n  return <p>No feedback given</p>;\n}\n\nexport default Notification;","import { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [good_value, setGood] = useState(0);\n  const [neutral_value, setNeutral] = useState(0);\n  const [bad_value, setBad] = useState(0);\n\n  function handleClick(evt) {\n    const key = evt.target.id;\n\n    switch (key) {\n      case \"good_value\":\n        setGood(good_value + 1);\n        break;\n\n      case \"neutral_value\":\n        setNeutral(neutral_value + 1);\n        break;\n\n      case \"bad_value\":\n        setBad(bad_value + 1);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function countTotalFeedback() {\n    return good_value + neutral_value + bad_value;\n  }\n  function countPositiveFeedbackPercentage() {\n    return Math.round((good_value / countTotalFeedback()) * 100);\n  }\n\n  return (\n    <>\n      <Section\n        title=\"Please leave feedback\"\n        children={<FeedbackOptions onClick={handleClick} />}\n      />\n      {!good_value && !neutral_value && !bad_value ? (\n        <Section title=\"Statistics\" children={<Notification />} />\n      ) : (\n        <Section\n          title=\"Statistics\"\n          children={\n            <Statistics\n              good_value={good_value}\n              neutral_value={neutral_value}\n              bad_value={bad_value}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}